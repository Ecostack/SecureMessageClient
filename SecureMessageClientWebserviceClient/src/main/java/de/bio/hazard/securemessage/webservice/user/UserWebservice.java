
package de.bio.hazard.securemessage.webservice.user;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserWebservice", targetNamespace = "http://webservice.securemessage.hazard.bio.de/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWebservice {


    /**
     * 
     * @param arg0
     * @return
     *     returns de.bio.hazard.securemessage.webservice.user.UserListWebserviceReturnDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://webservice.securemessage.hazard.bio.de/", className = "de.bio.hazard.securemessage.webservice.user.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://webservice.securemessage.hazard.bio.de/", className = "de.bio.hazard.securemessage.webservice.user.GetUsersResponse")
    @Action(input = "http://webservice.securemessage.hazard.bio.de/UserWebservice/getUsersRequest", output = "http://webservice.securemessage.hazard.bio.de/UserWebservice/getUsersResponse")
    public UserListWebserviceReturnDTO getUsers(
        @WebParam(name = "arg0", targetNamespace = "")
        UserListWebserviceDTO arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns de.bio.hazard.securemessage.webservice.user.UserWebserviceReturnDTO
     * @throws UserNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPublicKeyByUsername", targetNamespace = "http://webservice.securemessage.hazard.bio.de/", className = "de.bio.hazard.securemessage.webservice.user.GetPublicKeyByUsername")
    @ResponseWrapper(localName = "getPublicKeyByUsernameResponse", targetNamespace = "http://webservice.securemessage.hazard.bio.de/", className = "de.bio.hazard.securemessage.webservice.user.GetPublicKeyByUsernameResponse")
    @Action(input = "http://webservice.securemessage.hazard.bio.de/UserWebservice/getPublicKeyByUsernameRequest", output = "http://webservice.securemessage.hazard.bio.de/UserWebservice/getPublicKeyByUsernameResponse", fault = {
        @FaultAction(className = UserNotFoundException_Exception.class, value = "http://webservice.securemessage.hazard.bio.de/UserWebservice/getPublicKeyByUsername/Fault/UserNotFoundException")
    })
    public UserWebserviceReturnDTO getPublicKeyByUsername(
        @WebParam(name = "arg0", targetNamespace = "")
        UserWebserviceDTO arg0)
        throws UserNotFoundException_Exception
    ;

}
